- Game
	- Design
		- Editor
			- Make separate navigation mode in editor.
			- Assing ID to created objects to make easily manipulate it.
		- Levels
			- Need a way to store and load objects in level file.
	- Physics
		- Determine optimal physics friction koefficients.
	- Graphics
		- Add debug renderer.
		- Add textures.
		- Add realistic lighting model.
	- Controls
		All game controls is pretty fine by now.
	- Audio
		By now we are skipping this phase.
	- Misc
		+ Add scale transform using for objects.
		[-] Add some parameter like material density to its properties.
		[-] Use material density to control texture wrap value.
		- Add OBJ files loader.
		- Add file containing models (INI file as beginning).
		+ Add event class.
		- Add event handling. (Depends on Stage entity - some game root object)
		+ Make universal INI file per application.
		+ Add compile time string id.
		+ Test compile time string id.
		[-] Parsers
			+ Add .ini file parser.
			+ Test INI file parser.
			[-] Add XML parser.
			[-] Add JSON parser.
- Engine

	model
   /     \
shader  physics_object
 | \     /
 | material
 |   |
texture

ResourceManager
	ShaderManager, TextureManager, MeshManager, etc.
Entity (GameObject)
	Scene

Take a look for OGRE classes.